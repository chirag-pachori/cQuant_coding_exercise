mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(starts_with("HB..."))
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(select(starts_with("HB...")))
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(str_detect("HB..."))
?str_dete
?str_detect
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(str_detect("HB...",coll()))
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "a")
fruit <- c("apple", "banana", "pear", "pinapple")
> str_detect(fruit, "^a")
str_detect(fruit, "^a")
filter(str_detect("^HB")
filter(str_detect(SettlementPoint,"^HB")
#PACKAGES INSTALL AND LOAD###############################################
install.packages("tidyverse","lubridate","stringr")
install.packages("tidyverse", "lubridate", "stringr")
library(tidyverse, lubridate, stringr)
filter(str_detect(SettlementPoint,"^HB")
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(str_detect(SettlementPoint,"^HB"))
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
# mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
# dplyr::filter(Price > 0) %>%
filter(str_detect(SettlementPoint,"^HB"))
price_volatility
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(str_detect(SettlementPoint,"^HB"))
price_volatility
#PACKAGES INSTALL AND LOAD###############################################
install.packages("tidyverse","lubridate","stringr")
library(tidyverse, lubridate, stringr)
#TASK - 1 ######################################################################
data_16 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2016.csv"))
data_17 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2017.csv"))
data_18 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2018.csv"))
data_19 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2019.csv"))
data_all <- data_16 %>%
add_row(data_17) %>%
add_row(data_18) %>%
add_row(data_19)
data_all
#TASK - 2 ######################################################################
average_price_by_month <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Month = (lubridate :: month(data_all$Date))) %>%
group_by(SettlementPoint, Year, Month) %>%
summarize(AveragePrice = mean(Price, na.rm=TRUE)) %>%
select(SettlementPoint, Year, Month, AveragePrice)
average_price_by_month
#TASK - 3 ######################################################################
write_csv(average_price_by_month, "AveragePriceByMonth.csv")
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0) %>%
filter(str_detect(SettlementPoint,"^HB"))
price_volatility
install.packages("tidyverse", "lubridate", "stringr")
price_volatility
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB"))
price_volatility
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlemetPoint, Year, Hour)
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlementPoint, Year, Hour)
price_volatility
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlementPoint, Year, Hour, Price)
price_volatility
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlementPoint, Year, Hour, Price) %>%
summarize(sd(log(Price)))
price_volatility
#TASK - 4 ######################################################################
price_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlementPoint, Year, Hour, Price) %>%
summarize(HourlyVolatility = sd(log(Price)))
price_volatility
#TASK - 4 ######################################################################
hourly_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlementPoint, Year, Hour, Price) %>%
summarize(HourlyVolatility = sd(log(Price)))
hourly_volatility
#TASK - 5 ######################################################################
write_csv(hourly_volatility, "HourlyVolatility.csv")
hourly_volatility
#TASK - 5 ######################################################################
write_csv(hourly_volatility, "HourlyVolatilityByYear.csv")
max_volatility_by_year <- hourly_volatility %>%
group_by(Year) %>%
summarize(HourlyVolatility = max(HourlyVolatility))
max_volatility_by_year
max_volatility_by_year <- hourly_volatility %>%
group_by(SettlementPoint, Year) %>%
summarize(HourlyVolatility = max(HourlyVolatility))
max_volatility_by_year
select(SettlemetPoint, Year, hourly_volatility)
select(SettlementPoint, Year, hourly_volatility)
max_volatility_by_year <- hourly_volatility %>%
group_by(SettlementPoint, Year) %>%
summarize(HourlyVolatility = max(HourlyVolatility)) %>%
select(SettlementPoint, Year, hourly_volatility)
max_volatility_by_year
max_volatility_by_year <- hourly_volatility %>%
group_by(Year)
max_volatility_by_year
max_volatility_by_year <- hourly_volatility %>%
group_by(Year) %>%
summarize(HourlyVolatility = max(HourlyVolatility)) %>%
select(SettlementPoint, Year, hourly_volatility)
max_volatility_by_year <- hourly_volatility %>%
group_by(Year) %>%
summarize(HourlyVolatility = max(HourlyVolatility))
max_volatility_by_year
data_all
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::Hour(data_all $ Date)), Date = (lubridate :: Date(data_all$Date)))
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate :: dmy(data_all$Date)))
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Datex = (lubridate :: dmy(data_all$Date)))
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)))
spot_history_format
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (as_date(Date)))
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date)))
spot_history_format
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price)
spot_history_format
write_csv(spot_history_format, "temp.csv")
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
group_by(SettlementPoint)
spot_history_format
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
reorder(SettlementPoint)
spot_history_format
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
arrange(SettlementPoint)
spot_history_format
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = "X"Price) %>%
arrange(SettlementPoint)
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
arrange(SettlementPoint)
spot_history_format
library(tidyverse, lubridate, stringr, data.table)
#PACKAGES INSTALL AND LOAD###############################################
install.packages("tidyverse","lubridate","stringr", "data.table")
install.packages("tidyverse", "lubridate", "stringr", "data.table")
library(tidyverse, lubridate, stringr, data.table)
install.packages("data.table")
library(tidyverse, lubridate, stringr, data.table)
library(data.table)
split_spot_history_format <- split(spot_history_format, spot_history_format$SettlementPoint)
split_spot_history_format
lapply(names(split_spot_history_format), function(x){write.table(spt1[[x]], file = paste("spot_", x, sep = ""))})
split_spot_history_format <- as_data_frame(split(spot_history_format, spot_history_format$SettlementPoint))
split_spot_history_format <- split(spot_history_format, spot_history_format$SettlementPoint)
split_spot_history_format
split_spot_history_format <- as_data_frame(split_spot_history_format)
lapply(names(split_spot_history_format), function(x){write.table(spt1[[x]], file = paste("spot_", x, sep = ""))})
arrange(Variable)
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
rename(Variable = SettlementPoint) %>%
arrange(Variable)
spot_history_format
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
rename(Variable = SettlementPoint) %>%
relocate(Variable) %>%
arrange(Variable)
spot_history_format
write_csv(spot_history_format, "temp.csv")
write_csv(spot_history_format, "temp.csv")
split_names = names(split_spot_history_format)
split_names
write.csv(x = split_spot_history_format[[nm]], file = paste0(nm, ".csv"), row.names = FALSE)
type(split_spot_history_format)
view(split_spot_history_format)
is.array(split_spot_history_format)
which(split_spot_history_format)
is_tibble(split_spot_history_format)
is_list(split_spot_history_format)
df <- data.frame(matrix(unlist(split_spot_history_format)byrow=TRUE),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(split_spot_history_format),byrow=TRUE),stringsAsFactors=FALSE)
df
spot_history_format
df <- data.frame(matrix(unlist(split_spot_history_format), ncolumn=27,byrow=TRUE),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(split_spot_history_format), ncolumn=27),stringsAsFactors=FALSE)
df <- split_spot_history_format %>%
unlist()
df
df <- split_spot_history_format %>%
unlist() %>%
as_data_frame()
df
df <- split_spot_history_format %>%
unnest()
df <- split_spot_history_format %>%
unnest(cols = 27)
?unnest
df <- split_spot_history_format %>%
unnest(cols = split_names)
write_csv(split_spot_history_format, "temp.csv")
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
rename(Variable = SettlementPoint) %>%
relocate(Variable) %>%
arrange(Variable) %>%
as_data_frame()
spot_history_format
split_spot_history_format <- split(spot_history_format, spot_history_format$SettlementPoint)
split_spot_history_format <- split(spot_history_format, spot_history_format$Variable)
split_names = names(split_spot_history_format)
split_names
write_csv(split_spot_history_format, "temp.csv")
spot_history_format
split_spot_history_format <- split(spot_history_format, spot_history_format$Variable)
split_spot_history_format
split_names
print(split_spot_history_format)
for(split_names[1]){
print(split_spot_history_format)
}
print(split_spot_history_format[1])
write.csv(spot_history_format[i])
write.csv(split_spot_history_format[i], "spot_"+split_names+".csv")
for(split_spot_history_format[i = 1:n]){
write.csv(split_spot_history_format[i], "spot_"+split_names+".csv")
}
for(split_spot_history_format[i = 1:n]){
write.csv(split_spot_history_format[i], "spot_"+split_names+".csv")
}
split_spot_history_format[1]
for(i = 1:n){
write.csv(split_spot_history_format[i], "spot_"+split_names+".csv")
}
for(i in seq_along(split_spot_history_format)){
write.csv(split_spot_history_format[i], "spot_"+split_names+".csv")
}
write.csv(split_spot_history_format[i],split_names+".csv")
write.csv(split_spot_history_format[i],"split_names.csv")
write_csv(split_spot_history_format, "split.csv")
d[i] <- split_spot_history_format[i])
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
d[i] <- split_spot_history_format[i])
}
d[i] <- split_spot_history_format[i]
split_names[i] <- split_spot_history_format[i]
# split_spot_history_format[1]
#
(for(i in seq_along(split_names)){
split_names[i] <- split_spot_history_format[i]
})
split_names[1]
is_list(split_names)
split_names = names(split_spot_history_format)
split_names
write.csv(split_spot_history_format[i], file_name)
file_name <-  paste(split_names[i])
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste(split_names[i])
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste(split_names[i])
write.csv(split_spot_history_format[i], file_name,".csv")
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste(split_names[i])
write.csv(split_spot_history_format[i], file_name,".csv")
}
?write.csv
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste(split_names[i])
write.csv(split_spot_history_format[i], file_name, fileEncoding = csv)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste(split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste("formattedSpotHistory/"split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
rename(Variable = SettlementPoint) %>%
relocate(Variable) %>%
arrange(Variable) %>%
as_data_frame()
spot_history_format
split_spot_history_format <- split(spot_history_format, spot_history_format$Variable)
split_spot_history_format
split_names = names(split_spot_history_format)
split_names
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
new_column_names <- names(spot_history_format)
new_column_names
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
split_spot_history_format[i] %>%
rename(names(split_spot_history_format[i] = new_column_names))
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
split_spot_history_format[i] %>%
rename(names(split_spot_history_format[i]) = new_column_names)
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
split_spot_history_format[i] %>%
rename(names(split_spot_history_format[i]) = new_column_names)
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
rename(names(split_spot_history_format[i]) = new_column_names)
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
# rename(names(split_spot_history_format[i]) = new_column_names)
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
max_volatility_by_year
write_csv(max_volatility_by_year, "MaxVolatilityByYear.csv")
#PACKAGES INSTALL AND LOAD###############################################
install.packages("tidyverse","lubridate","stringr", "data.table")
install.packages("data.table")
library(tidyverse, lubridate, stringr)
library(data.table)
#TASK - 1 ######################################################################
data_16 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2016.csv"))
data_17 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2017.csv"))
data_18 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2018.csv"))
data_19 <- as_tibble(read.csv("historicalPriceData/ERCOT_DA_Prices_2019.csv"))
data_all <- data_16 %>%
add_row(data_17) %>%
add_row(data_18) %>%
add_row(data_19)
data_all
#TASK - 2 ######################################################################
average_price_by_month <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Month = (lubridate :: month(data_all$Date))) %>%
group_by(SettlementPoint, Year, Month) %>%
summarize(AveragePrice = mean(Price, na.rm=TRUE)) %>%
select(SettlementPoint, Year, Month, AveragePrice)
average_price_by_month
#TASK - 3 ######################################################################
write_csv(average_price_by_month, "AveragePriceByMonth.csv")
#TASK - 4 ######################################################################
hourly_volatility <- data_all %>%
mutate(Year = (lubridate::year(data_all $ Date)), Hour = (lubridate :: hour(data_all$Date))) %>%
dplyr::filter(Price > 0, str_detect(SettlementPoint,"^HB")) %>%
group_by(SettlementPoint, Year) %>%
select(SettlementPoint, Year, Hour, Price) %>%
summarize(HourlyVolatility = sd(log(Price)))
hourly_volatility
#TASK - 5 ######################################################################
write_csv(hourly_volatility, "HourlyVolatilityByYear.csv")
#TASK - 6 ######################################################################
max_volatility_by_year <- hourly_volatility %>%
group_by(Year) %>%
summarize(HourlyVolatility = max(HourlyVolatility))
max_volatility_by_year
write_csv(max_volatility_by_year, "MaxVolatilityByYear.csv")
#TASK- 7 #######################################################################
spot_history_format <- data_all %>%
mutate(Hour = (lubridate::hour(data_all $ Date)), Date = (lubridate::as_date(Date))) %>%
pivot_wider(names_from = Hour, values_from = Price) %>%
rename(Variable = SettlementPoint) %>%
relocate(Variable) %>%
arrange(Variable) %>%
as_data_frame()
spot_history_format
split_spot_history_format <- split(spot_history_format, spot_history_format$Variable)
split_spot_history_format
split_names = names(split_spot_history_format)
split_names
new_column_names <- names(spot_history_format)
new_column_names
# split_spot_history_format[1]
#
for(i in seq_along(split_names)){
# rename(names(split_spot_history_format[i]) = new_column_names)    #Tried renaming columns
file_name <-  paste("formattedSpotHistory/",split_names[i],".csv")
write.csv(split_spot_history_format[i], file_name)
}
# split_names[1]
#
# is_list(split_names)
#
# write_csv(split_spot_history_format, "temp.csv")
# lapply(names(split_spot_history_format), function(x){write.table(spt1[[x]], file = paste("spot_", x, sep = ""))})
#
# df <- split_spot_history_format %>%
#   unnest(cols = split_names)
#
# df
# lapply(split_names, function(nm){
#   write.csv(x = split_spot_history_format[[nm]], file = paste0(nm, ".csv"), row.names = FALSE)
# })
install.packages("tidyverse", "lubridate", "stringr", "data.table")
install.packages("data.table")
install.packages("data.table")
